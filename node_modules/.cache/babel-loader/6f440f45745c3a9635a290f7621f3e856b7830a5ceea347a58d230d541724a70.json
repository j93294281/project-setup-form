{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MCPServersPage(_ref){let{formData,updateFormData,skipPage}=_ref;const aiData=formData.aiIntegration;const handleAIInputChange=(field,value)=>{updateFormData('aiIntegration',{[field]:value});};const handleAICheckboxChange=(field,value,checked)=>{const currentValues=aiData[field]||[];if(checked){handleAIInputChange(field,[...currentValues,value]);}else{handleAIInputChange(field,currentValues.filter(v=>v!==value));}};const handleDeSelectAll=()=>{updateFormData('aiIntegration',{mcpServers:[]});};const mcpServersByCategory={'Core Infrastructure':['Anthropic','AWS','Docker','File System','Git','GitHub','Google Cloud','OpenAI'],'Automation':['IFTTT','N8N','Zapier'],'Communication & Collaboration':['Confluence','Discord','Mailchimp','Microsoft Teams','Notion','SendGrid','Slack','Twilio','Zoom'],'CRM & Business Tools':['HubSpot','Salesforce','WordPress'],'Design & Creative':['Figma'],'Development & Cloud':['Airtable','Azure','Cloudflare','DigitalOcean','Dropbox','Firebase','Google Cloud','Google Drive','Heroku','MongoDB','Netlify','PlanetScale','PostgreSQL','Redis','Supabase','Vercel'],'Payments & Accounting':['Paddle','Shopify','Stripe'],'Project Management':['Asana','Jira','Linear','Monday.com','Trello']};const allServers=Object.values(mcpServersByCategory).flat();return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-2\",children:\"MCP Servers\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Choose your preferred MCP servers for AI integration\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 flex flex-col space-y-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-700 text-sm\",children:\"If this section does not apply,.. skip it.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:skipPage,className:\"px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors w-full\",children:\"Save & Skip\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg border\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"Quick Selection\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(aiData.mcpServers||[]).includes('Let the AI decide these for me'),onChange:e=>handleAICheckboxChange('mcpServers','Let the AI decide these for me',e.target.checked),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700 font-medium\",children:\"Let the AI decide these for me\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(aiData.mcpServers||[]).length===allServers.length,onChange:e=>{if(e.target.checked){updateFormData('aiIntegration',{mcpServers:[...allServers]});}else{updateFormData('aiIntegration',{mcpServers:[]});}},className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700 font-medium\",children:\"Select All (50 servers)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(aiData.mcpServers||[]).length===10,onChange:e=>{if(e.target.checked){updateFormData('aiIntegration',{mcpServers:mcpServersByCategory['Core Infrastructure']});}else{updateFormData('aiIntegration',{mcpServers:[]});}},className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700 font-medium\",children:\"Top 10 (Core Infrastructure)\"})]}),/*#__PURE__*/_jsx(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleDeSelectAll,className:\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors w-full md:w-auto\",children:\"De-Select All\"})})]})]}),Object.entries(mcpServersByCategory).map(_ref2=>{let[category,servers]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg border\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4 text-blue-600\",children:category}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:servers.map((server,index)=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(aiData.mcpServers||[]).includes(server),onChange:e=>handleAICheckboxChange('mcpServers',server,e.target.checked),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-700 text-sm\",children:[server,index<3&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800\",children:\"Popular\"})]})]},server))})]},category);})]});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","MCPServersPage","_ref","formData","updateFormData","skipPage","aiData","aiIntegration","handleAIInputChange","field","value","handleAICheckboxChange","checked","currentValues","filter","v","handleDeSelectAll","mcpServers","mcpServersByCategory","allServers","Object","values","flat","className","children","onClick","type","includes","onChange","e","target","length","entries","map","_ref2","category","servers","server","index"],"sources":["/home/user9/Documents/claude-projects/claude-first-project/src/components/pages/MCPServersPage.tsx"],"sourcesContent":["import React from 'react';\nimport { MultiStageFormData, AIIntegration } from '../../types/FormTypes';\n\ninterface Props {\n  formData: MultiStageFormData;\n  updateFormData: <K extends keyof MultiStageFormData>(\n    section: K,\n    data: Partial<MultiStageFormData[K]>\n  ) => void;\n  nextPage: () => void;\n  previousPage: () => void;\n  skipPage: () => void;\n}\n\nexport default function MCPServersPage({ formData, updateFormData, skipPage }: Props) {\n  const aiData = formData.aiIntegration;\n\n  const handleAIInputChange = (field: keyof AIIntegration, value: string | string[] | boolean) => {\n    updateFormData('aiIntegration', { [field]: value });\n  };\n\n  const handleAICheckboxChange = (field: keyof AIIntegration, value: string, checked: boolean) => {\n    const currentValues = (aiData[field] as string[]) || [];\n    if (checked) {\n      handleAIInputChange(field, [...currentValues, value]);\n    } else {\n      handleAIInputChange(field, currentValues.filter(v => v !== value));\n    }\n  };\n\n  const handleDeSelectAll = () => {\n    updateFormData('aiIntegration', { mcpServers: [] });\n  };\n\n  const mcpServersByCategory = {\n    'Core Infrastructure': [\n      'Anthropic',\n      'AWS',\n      'Docker',\n      'File System',\n      'Git',\n      'GitHub',\n      'Google Cloud',\n      'OpenAI'\n    ],\n    'Automation': [\n      'IFTTT',\n      'N8N',\n      'Zapier'\n    ],\n    'Communication & Collaboration': [\n      'Confluence',\n      'Discord',\n      'Mailchimp',\n      'Microsoft Teams',\n      'Notion',\n      'SendGrid',\n      'Slack',\n      'Twilio',\n      'Zoom'\n    ],\n    'CRM & Business Tools': [\n      'HubSpot',\n      'Salesforce',\n      'WordPress'\n    ],\n    'Design & Creative': [\n      'Figma'\n    ],\n    'Development & Cloud': [\n      'Airtable',\n      'Azure',\n      'Cloudflare',\n      'DigitalOcean',\n      'Dropbox',\n      'Firebase',\n      'Google Cloud',\n      'Google Drive',\n      'Heroku',\n      'MongoDB',\n      'Netlify',\n      'PlanetScale',\n      'PostgreSQL',\n      'Redis',\n      'Supabase',\n      'Vercel'\n    ],\n    'Payments & Accounting': [\n      'Paddle',\n      'Shopify',\n      'Stripe'\n    ],\n    'Project Management': [\n      'Asana',\n      'Jira',\n      'Linear',\n      'Monday.com',\n      'Trello'\n    ]\n  };\n\n  const allServers = Object.values(mcpServersByCategory).flat();\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">MCP Servers</h2>\n        <p className=\"text-gray-600\">Choose your preferred MCP servers for AI integration</p>\n      </div>\n\n      {/* Yellow info box with Save & Skip button */}\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 flex flex-col space-y-3\">\n        <span className=\"text-yellow-700 text-sm\">If this section does not apply,.. skip it.</span>\n        <button\n          onClick={skipPage}\n          className=\"px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors w-full\"\n        >\n          Save & Skip\n        </button>\n      </div>\n\n      {/* Quick Selection Options */}\n      <div className=\"bg-white p-6 rounded-lg border\">\n        <h3 className=\"text-lg font-semibold mb-4\">Quick Selection</h3>\n        <div className=\"space-y-3\">\n          <label className=\"flex items-center space-x-3 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={(aiData.mcpServers || []).includes('Let the AI decide these for me')}\n              onChange={(e) => handleAICheckboxChange('mcpServers', 'Let the AI decide these for me', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-gray-700 font-medium\">Let the AI decide these for me</span>\n          </label>\n          <label className=\"flex items-center space-x-3 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={(aiData.mcpServers || []).length === allServers.length}\n              onChange={(e) => {\n                if (e.target.checked) {\n                  updateFormData('aiIntegration', { mcpServers: [...allServers] });\n                } else {\n                  updateFormData('aiIntegration', { mcpServers: [] });\n                }\n              }}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-gray-700 font-medium\">Select All (50 servers)</span>\n          </label>\n          <label className=\"flex items-center space-x-3 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={(aiData.mcpServers || []).length === 10}\n              onChange={(e) => {\n                if (e.target.checked) {\n                  updateFormData('aiIntegration', { mcpServers: mcpServersByCategory['Core Infrastructure'] });\n                } else {\n                  updateFormData('aiIntegration', { mcpServers: [] });\n                }\n              }}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-gray-700 font-medium\">Top 10 (Core Infrastructure)</span>\n          </label>\n          <label className=\"flex items-center space-x-3 cursor-pointer\">\n            <button\n              onClick={handleDeSelectAll}\n              className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors w-full md:w-auto\"\n            >\n              De-Select All\n            </button>\n          </label>\n        </div>\n      </div>\n\n      {/* MCP Servers by Category */}\n      {Object.entries(mcpServersByCategory).map(([category, servers]) => (\n        <div key={category} className=\"bg-white p-6 rounded-lg border\">\n          <h3 className=\"text-lg font-semibold mb-4 text-blue-600\">{category}</h3>\n          <div className=\"space-y-3\">\n            {servers.map((server, index) => (\n              <label key={server} className=\"flex items-center space-x-3 cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={(aiData.mcpServers || []).includes(server)}\n                  onChange={(e) => handleAICheckboxChange('mcpServers', server, e.target.checked)}\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                />\n                <span className=\"text-gray-700 text-sm\">\n                  {server}\n                  {index < 3 && (\n                    <span className=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800\">\n                      Popular\n                    </span>\n                  )}\n                </span>\n              </label>\n            ))}\n          </div>\n        </div>\n      ))}\n\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}