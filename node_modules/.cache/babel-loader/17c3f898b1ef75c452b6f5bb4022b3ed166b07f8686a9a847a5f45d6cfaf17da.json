{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MCPServersPage(_ref){let{formData,updateFormData,skipPage}=_ref;const aiData=formData.aiIntegration;const handleAIInputChange=(field,value)=>{updateFormData('aiIntegration',{[field]:value});};const handleAICheckboxChange=(field,value,checked)=>{const currentValues=aiData[field]||[];if(checked){handleAIInputChange(field,[...currentValues,value]);}else{handleAIInputChange(field,currentValues.filter(v=>v!==value));}};const mcpServers=['Anthropic MCP Server','Custom MCP Server','Database MCP Server','File System MCP Server','Google MCP Server','OpenAI MCP Server'];return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-2\",children:\"MCP Servers\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Choose your preferred MCP servers for AI integration\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 flex flex-col md:flex-row md:items-center md:justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-700 text-sm mb-2 md:mb-0\",children:\"If this section does not apply,.. skip it.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:skipPage,className:\"px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors w-full md:w-auto\",children:\"Save & Skip\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg border\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"MCP Servers\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Select all MCP servers you want to integrate:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(aiData.mcpServers||[]).includes('Let the AI decide these for me'),onChange:e=>handleAICheckboxChange('mcpServers','Let the AI decide these for me',e.target.checked),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700 font-medium\",children:\"Let the AI decide these for me\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(aiData.mcpServers||[]).length===mcpServers.length,onChange:e=>{if(e.target.checked){updateFormData('aiIntegration',{mcpServers:[...mcpServers]});}else{updateFormData('aiIntegration',{mcpServers:[]});}},className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700 font-medium\",children:\"All are OK\"})]}),mcpServers.map(server=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(aiData.mcpServers||[]).includes(server),onChange:e=>handleAICheckboxChange('mcpServers',server,e.target.checked),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700 text-sm\",children:server})]},server))]})]})]});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","MCPServersPage","_ref","formData","updateFormData","skipPage","aiData","aiIntegration","handleAIInputChange","field","value","handleAICheckboxChange","checked","currentValues","filter","v","mcpServers","className","children","onClick","type","includes","onChange","e","target","length","map","server"],"sources":["/home/user9/Documents/claude-projects/claude-first-project/src/components/pages/MCPServersPage.tsx"],"sourcesContent":["import React from 'react';\nimport { MultiStageFormData, AIIntegration } from '../../types/FormTypes';\n\ninterface Props {\n  formData: MultiStageFormData;\n  updateFormData: <K extends keyof MultiStageFormData>(\n    section: K,\n    data: Partial<MultiStageFormData[K]>\n  ) => void;\n  nextPage: () => void;\n  previousPage: () => void;\n  skipPage: () => void;\n}\n\nexport default function MCPServersPage({ formData, updateFormData, skipPage }: Props) {\n  const aiData = formData.aiIntegration;\n\n  const handleAIInputChange = (field: keyof AIIntegration, value: string | string[] | boolean) => {\n    updateFormData('aiIntegration', { [field]: value });\n  };\n\n  const handleAICheckboxChange = (field: keyof AIIntegration, value: string, checked: boolean) => {\n    const currentValues = (aiData[field] as string[]) || [];\n    if (checked) {\n      handleAIInputChange(field, [...currentValues, value]);\n    } else {\n      handleAIInputChange(field, currentValues.filter(v => v !== value));\n    }\n  };\n\n  const mcpServers = [\n    'Anthropic MCP Server',\n    'Custom MCP Server',\n    'Database MCP Server',\n    'File System MCP Server',\n    'Google MCP Server',\n    'OpenAI MCP Server'\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">MCP Servers</h2>\n        <p className=\"text-gray-600\">Choose your preferred MCP servers for AI integration</p>\n      </div>\n\n      {/* Yellow info box with Save & Skip button */}\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 flex flex-col md:flex-row md:items-center md:justify-between\">\n        <span className=\"text-yellow-700 text-sm mb-2 md:mb-0\">If this section does not apply,.. skip it.</span>\n        <button\n          onClick={skipPage}\n          className=\"px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors w-full md:w-auto\"\n        >\n          Save & Skip\n        </button>\n      </div>\n\n      {/* MCP Servers */}\n      <div className=\"bg-white p-6 rounded-lg border\">\n        <h3 className=\"text-lg font-semibold mb-4\">MCP Servers</h3>\n        <p className=\"text-gray-600 mb-4\">Select all MCP servers you want to integrate:</p>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n          <label className=\"flex items-center space-x-3 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={(aiData.mcpServers || []).includes('Let the AI decide these for me')}\n              onChange={(e) => handleAICheckboxChange('mcpServers', 'Let the AI decide these for me', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-gray-700 font-medium\">Let the AI decide these for me</span>\n          </label>\n          <label className=\"flex items-center space-x-3 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={(aiData.mcpServers || []).length === mcpServers.length}\n              onChange={(e) => {\n                if (e.target.checked) {\n                  updateFormData('aiIntegration', { mcpServers: [...mcpServers] });\n                } else {\n                  updateFormData('aiIntegration', { mcpServers: [] });\n                }\n              }}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-gray-700 font-medium\">All are OK</span>\n          </label>\n          {mcpServers.map((server) => (\n            <label key={server} className=\"flex items-center space-x-3 cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={(aiData.mcpServers || []).includes(server)}\n                onChange={(e) => handleAICheckboxChange('mcpServers', server, e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"text-gray-700 text-sm\">{server}</span>\n            </label>\n          ))}\n        </div>\n      </div>\n\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}